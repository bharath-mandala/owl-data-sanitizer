#metadata for the source table.
source_table:
  name: mock_data/family_sample.csv
  id_column: ID
  output_correctness_table: /tmp/mock_data/output/family_sample_test_correctness
  output_completeness_table: /tmp/mock_data/output/family_sample_test_completeness
  output_comparison_table: /tmp/mock_data/output/family_sample_test_comparison
  unique_column_group_values_per_table: #deduplication using 1 or more columns.
    - ID
    - NAME
    - FAMILY_NAME
    - PARENT
  fuzzy_deduplication_distance: 0 #apply fuzzy matching distance N to deduplication, 0 for disable.
  #correctness rules per column, use a SQL query in a negative way. Example: where col is not null and is != 'a'.
correctness_validations:
  - column: ID
    rule: ID is not null and ID != '' and ID != 'null'
  - column: NAME
    rule: NAME is not null and NAME != '' and NAME != 'null' and NAME like '%ho%'
  - column: FAMILY_NAME
    rule: 'NAME is not null and FAMILY_NAME in (''Cha'', ''Pha'')'
  - column: ADDRESS
    rule: >-
      ADDRESS is not null and ADDRESS != '' and ADDRESS != 'null' and
      CHAR_LENGTH(ADDRESS) > 4
#validations for parent children constraints. Example: parent should be a valid entity within the table.
parent_children_constraints:
  - column: ID
    parent: PARENT
#completeness rules. Use either an overall completeness count or a count compared with previous partitions.
#for simple overall count keep the column name OVER_ALL_COUNT.
completeness_validations:
  overall:
    column: OVER_ALL_COUNT
    rule: OVER_ALL_COUNT <= 5
  partitioned:
    previous_partition: mock_data/family_sample_previous.csv
    max_grow_percentage: 10 #use negative for reduction.
#checksum compare data with different tables. Example: compare against a goal set or the test vs production env.
compare_related_tables_list:
  - mock_data/family_sample_diff.csv